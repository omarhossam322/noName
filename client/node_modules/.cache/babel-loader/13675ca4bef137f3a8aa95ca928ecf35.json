{"ast":null,"code":"var _jsxFileName = \"/home/ahmad/build/omar3/client/src/components/editFlight.js\";\nimport React, { Component } from \"react\"; // This will require to npm install axios\n\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Edit extends Component {\n  // This is the constructor that stores the data.\n  constructor(props) {\n    super(props);\n    this.onChangeFlightNo = this.onChangeFlightNo.bind(this);\n    this.onChangeFlightFrom = this.onChangeFlightFrom.bind(this);\n    this.onChangeFlightTo = this.onChangeFlightTo.bind(this);\n    this.onChangeFlightDate = this.onChangeFlightDate.bind(this);\n    this.onChangeFlightCabin = this.onChangeFlightCabin.bind(this);\n    this.onChangeFlightSeats = this.onChangeFlightSeats.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      flight_no: \"\",\n      flight_from: \"\",\n      flight_to: \"\",\n      flight_date: \"\",\n      flight_cabin: \"\",\n      flight_seats: \"\",\n      flights: []\n    };\n  } // This will get the record based on the id from the database.\n\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/flight/\" + this.props.match.params.id).then(response => {\n      this.setState({\n        flight_no: response.data.flight_no,\n        flight_from: response.data.flight_from,\n        flight_to: response.data.flight_to,\n        flight_date: response.data.flight_date,\n        flight_cabin: response.data.flight_cabin,\n        flight_seats: response.data.flight_seats\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } // These methods will update the state properties.\n\n\n  onChangeFlightNo(e) {\n    this.setState({\n      flight_no: e.target.value\n    });\n  }\n\n  onChangeFlightFrom(e) {\n    this.setState({\n      flight_from: e.target.value\n    });\n  }\n\n  onChangeFlightTo(e) {\n    this.setState({\n      flight_to: e.target.value\n    });\n  }\n\n  onChangeFlightDate(e) {\n    this.setState({\n      flight_date: e.target.value\n    });\n  }\n\n  onChangeFlightCabin(e) {\n    this.setState({\n      flight_cabin: e.target.value\n    });\n  }\n\n  onChangeFlightSeats(e) {\n    this.setState({\n      flight_seats: e.target.value\n    });\n  } // This function will handle the submission.\n\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newEditedflight = {\n      flight_no: this.state.flight_no,\n      flight_from: this.state.flight_from,\n      flight_to: this.state.flight_to,\n      flight_date: this.state.flight_date,\n      flight_cabin: this.state.flight_cabin,\n      flight_seats: this.state.flight_seats\n    };\n    console.log(newEditedflight); // This will send a post request to update the data in the database.\n\n    axios.post(\"http://localhost:5000/updateFlight/\" + this.props.match.params.id, newEditedflight).then(res => console.log(res.data));\n    this.props.history.push(\"/\");\n  } // This following section will display the update-form that takes the input from the user to update the data.\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        align: \"center\",\n        children: \"Update Flight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Flight Number: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            value: this.state.flight_no,\n            onChange: this.onChangeFlightNo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"From: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.flight_from,\n            onChange: this.onChangeFlightFrom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"To: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.flight_to,\n            onChange: this.onChangeFlightTo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Flight Date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"form-control\",\n            value: this.state.flight_date,\n            onChange: this.onChangeFlightDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Cabin: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.flight_cabin,\n            onChange: this.onChangeFlightCabin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Seats: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            value: this.state.flight_seats,\n            onChange: this.onChangeFlightSeats\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Update Flight\",\n            className: \"btn btn-primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n\n} // You can get access to the history object's properties and the closest <Route>'s match via the withRouter\n// higher-order component. This makes it easier for us to edit our records.\n\n\nexport default _c = withRouter(Edit);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/ahmad/build/omar3/client/src/components/editFlight.js"],"names":["React","Component","axios","withRouter","Edit","constructor","props","onChangeFlightNo","bind","onChangeFlightFrom","onChangeFlightTo","onChangeFlightDate","onChangeFlightCabin","onChangeFlightSeats","onSubmit","state","flight_no","flight_from","flight_to","flight_date","flight_cabin","flight_seats","flights","componentDidMount","get","match","params","id","then","response","setState","data","catch","error","console","log","e","target","value","preventDefault","newEditedflight","post","res","history","push","render"],"mappings":"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","sourcesContent":["import React,  {Component}  from \"react\";\n// This will require to npm install axios\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\n\nclass Edit extends Component {\n  // This is the constructor that stores the data.\n  constructor(props) {\n    super(props);\n\n    this.onChangeFlightNo = this.onChangeFlightNo.bind(this);\n    this.onChangeFlightFrom = this.onChangeFlightFrom.bind(this);\n    this.onChangeFlightTo = this.onChangeFlightTo.bind(this);\n    this.onChangeFlightDate = this.onChangeFlightDate.bind(this);\n    this.onChangeFlightCabin = this.onChangeFlightCabin.bind(this);\n    this.onChangeFlightSeats = this.onChangeFlightSeats.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      flight_no: \"\",\n      flight_from: \"\",\n      flight_to: \"\",\n      flight_date: \"\",\n      flight_cabin: \"\",\n      flight_seats: \"\",\n      flights: [],\n    };\n  }\n  // This will get the record based on the id from the database.\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/flight/\" + this.props.match.params.id)\n      .then((response) => {\n        this.setState({\n          flight_no: response.data.flight_no,\n          flight_from: response.data.flight_from,\n          flight_to: response.data.flight_to,\n          flight_date: response.data.flight_date,\n          flight_cabin: response.data.flight_cabin,\n          flight_seats: response.data.flight_seats,\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  // These methods will update the state properties.\n  onChangeFlightNo(e) {\n    this.setState({\n      flight_no: e.target.value,\n    });\n  }\n\n  onChangeFlightFrom(e) {\n    this.setState({\n      flight_from: e.target.value,\n    });\n  }\n\n  onChangeFlightTo(e) {\n    this.setState({\n      flight_to: e.target.value,\n    });\n  }\n\n  onChangeFlightDate(e) {\n    this.setState({\n      flight_date: e.target.value,\n    });\n  }\n\n  onChangeFlightCabin(e) {\n    this.setState({\n      flight_cabin: e.target.value,\n    });\n  }\n\n  onChangeFlightSeats(e) {\n    this.setState({\n      flight_seats: e.target.value,\n    });\n  }\n\n  // This function will handle the submission.\n  onSubmit(e) {\n    e.preventDefault();\n    const newEditedflight = {\n      flight_no: this.state.flight_no,\n      flight_from: this.state.flight_from,\n      flight_to: this.state.flight_to,\n      flight_date: this.state.flight_date,\n      flight_cabin: this.state.flight_cabin,\n      flight_seats: this.state.flight_seats,\n    };\n    console.log(newEditedflight);\n\n    // This will send a post request to update the data in the database.\n    axios\n      .post(\n        \"http://localhost:5000/updateFlight/\" + this.props.match.params.id,\n        newEditedflight\n      )\n      .then((res) => console.log(res.data));\n\n    this.props.history.push(\"/\");\n  }\n\n  // This following section will display the update-form that takes the input from the user to update the data.\n  render() {\n    return (\n      <div>\n        <h3 align=\"center\">Update Flight</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Flight Number: </label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              value={this.state.flight_no}\n              onChange={this.onChangeFlightNo}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>From: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.flight_from}\n              onChange={this.onChangeFlightFrom}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>To: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.flight_to}\n              onChange={this.onChangeFlightTo}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Flight Date: </label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              value={this.state.flight_date}\n              onChange={this.onChangeFlightDate}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Cabin: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.flight_cabin}\n              onChange={this.onChangeFlightCabin}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Seats: </label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              value={this.state.flight_seats}\n              onChange={this.onChangeFlightSeats}\n            />\n          </div>\n          <br />\n\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Update Flight\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\n// You can get access to the history object's properties and the closest <Route>'s match via the withRouter\n// higher-order component. This makes it easier for us to edit our records.\n\nexport default withRouter(Edit);\n"]},"metadata":{},"sourceType":"module"}