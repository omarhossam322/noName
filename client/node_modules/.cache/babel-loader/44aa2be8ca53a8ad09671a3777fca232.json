{"ast":null,"code":"var _jsxFileName = \"/home/ahmad/build/omar3/client/src/components/reservationsList.js\";\nimport React, { Component } from \"react\"; // This will require to npm install axios\n\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reservation = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.reservation.dep_flight_no\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.reservation.return_flight_no\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/reservations\",\n      onClick: () => {\n        //popup\n        const confirmBox = window.confirm(\"Do you really want to cancel this reservation?\");\n\n        if (confirmBox === true) {\n          props.deleteReservation(props.reservation._id);\n        }\n      },\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\n_c = Reservation;\nexport default class ReservationList extends Component {\n  // This is the constructor that shall store our data retrieved from the database\n  constructor(props) {\n    super(props);\n    this.deleteReservation = this.deleteReservation.bind(this);\n    this.state = {\n      reservations: []\n    };\n  } // This method will get the data from the database.\n\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/reservations/\" + \"user1\").then(response => {\n      this.setState({\n        reservations: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } // This method will delete a reservation based on the method\n\n\n  deleteReservation(id) {\n    axios.delete(\"http://localhost:5000/reservations/\" + id).then(response => {\n      console.log(response.data);\n    });\n    this.setState({\n      reservation: this.state.reservations.filter(el => el._id !== id)\n    });\n  } // This method will map out the reservations on the table\n\n\n  reservationList() {\n    return this.state.reservations.map(currentreservation => {\n      return /*#__PURE__*/_jsxDEV(Reservation, {\n        reservation: currentreservation,\n        deleteReservation: this.deleteReservation\n      }, currentreservation._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this);\n    });\n  } // This following section will display the table with the reservations.\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Reservation List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        style: {\n          marginTop: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Departure Flight Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Arrival Flight Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.reservationList()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Reservation\");","map":{"version":3,"sources":["/home/ahmad/build/omar3/client/src/components/reservationsList.js"],"names":["React","Component","axios","Link","Reservation","props","reservation","dep_flight_no","return_flight_no","confirmBox","window","confirm","deleteReservation","_id","ReservationList","constructor","bind","state","reservations","componentDidMount","get","then","response","setState","data","catch","error","console","log","id","delete","filter","el","reservationList","map","currentreservation","render","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// This will require to npm install axios\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\nconst Reservation = (props) => (\n  <tr>\n    <td>{props.reservation.dep_flight_no}</td>\n    <td>{props.reservation.return_flight_no}</td>\n    \n    <td>\n      <a\n        href=\"/reservations\"\n        onClick={() => {\n          //popup\n          const confirmBox = window.confirm(\n            \"Do you really want to cancel this reservation?\"\n          )\n          if (confirmBox === true) {\n            props.deleteReservation(props.reservation._id);\n          }\n        }}\n      >\n        Cancel\n      </a>\n    </td>\n  </tr>\n);\n\nexport default class ReservationList extends Component {\n  // This is the constructor that shall store our data retrieved from the database\n  constructor(props) {\n    super(props);\n    this.deleteReservation = this.deleteReservation.bind(this);\n    this.state = { reservations: [] };\n  }\n\n  // This method will get the data from the database.\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/reservations/\" + \"user1\")\n      .then((response) => {\n        this.setState({ reservations: response.data });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  // This method will delete a reservation based on the method\n  deleteReservation(id) {\n    axios.delete(\"http://localhost:5000/reservations/\" + id).then((response) => {\n      console.log(response.data);\n    });\n\n    this.setState({\n      reservation: this.state.reservations.filter((el) => el._id !== id),\n    });\n  }\n\n  // This method will map out the reservations on the table\n  reservationList() {\n    return this.state.reservations.map((currentreservation) => {\n      return (\n        <Reservation\n          reservation={currentreservation}\n          deleteReservation={this.deleteReservation}\n          key={currentreservation._id}\n        />\n      );\n    });\n  }\n\n  // This following section will display the table with the reservations.\n  render() {\n    return (\n      <div>\n        <h3>Reservation List</h3>\n        <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n          <thead>\n            <tr>\n              <th>Departure Flight Number</th>\n              <th>Arrival Flight Number</th>\n              \n            </tr>\n          </thead>\n          <tbody>{this.reservationList()}</tbody>\n        </table>\n      </div>\n\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}