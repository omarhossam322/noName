{"ast":null,"code":"var _jsxFileName = \"/home/ahmad/build/noName/client/src/components/editUser.js\";\nimport React, { Component } from \"react\"; // This will require to npm install axios\n\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Edit extends Component {\n  // This is the constructor that stores the data.\n  constructor(props) {\n    super(props);\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\n    this.onChangeLastName = this.onChangeLastName.bind(this);\n    this.onChangePassportNumber = this.onChangePassportNumber.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      first_name: \"\",\n      last_name: \"\",\n      passport_number: \"\",\n      email: \"\"\n    };\n  } // This will get the record based on the id from the database.\n\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/userDetails/\" + \"user1\").then(response => {\n      this.setState({\n        first_name: response.data.first_name,\n        last_name: response.data.last_name,\n        passport_number: response.data.passport_number,\n        email: response.data.email\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } // These methods will update the state properties.\n\n\n  onChangeFirstName(e) {\n    this.setState({\n      first_name: e.target.value\n    });\n  }\n\n  onChangeLastName(e) {\n    this.setState({\n      last_name: e.target.value\n    });\n  }\n\n  onChangePassportNumber(e) {\n    this.setState({\n      passport_number: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  } // This function will handle the submission.\n\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newEditedUser = {\n      first_name: this.state.first_name,\n      last_name: this.state.last_name,\n      passport_number: this.state.passport_number,\n      email: this.state.email\n    };\n    console.log(newEditedUser); // This will send a post request to update the data in the database.\n\n    axios.post(\"http://localhost:5000/updateUser/\" + \"user1\", newEditedUser).then(res => console.log(res.data));\n    this.props.history.push(\"/userHome\");\n  } // This following section will display the update-form that takes the input from the user to update the data.\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        align: \"center\",\n        children: \"Update Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"First Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.first_name,\n            onChange: this.onChangeFirstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Last name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.last_name,\n            onChange: this.onChangeLastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Passport Number: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.passport_number,\n            onChange: this.onChangePassportNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            value: this.state.email,\n            onChange: this.onChangeEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Update Details\",\n            className: \"btn btn-primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n} // You can get access to the history object's properties and the closest <Route>'s match via the withRouter\n// higher-order component. This makes it easier for us to edit our records.\n\n\nexport default _c = withRouter(Edit);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/ahmad/build/noName/client/src/components/editUser.js"],"names":["React","Component","axios","withRouter","Edit","constructor","props","onChangeFirstName","bind","onChangeLastName","onChangePassportNumber","onChangeEmail","onSubmit","state","first_name","last_name","passport_number","email","componentDidMount","get","then","response","setState","data","catch","error","console","log","e","target","value","preventDefault","newEditedUser","post","res","history","push","render"],"mappings":"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","sourcesContent":["import React,  {Component}  from \"react\";\n// This will require to npm install axios\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\n\nclass Edit extends Component {\n  // This is the constructor that stores the data.\n  constructor(props) {\n    super(props);\n\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\n    this.onChangeLastName = this.onChangeLastName.bind(this);\n    this.onChangePassportNumber = this.onChangePassportNumber.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      first_name: \"\",\n      last_name: \"\",\n      passport_number: \"\",\n      email: \"\",\n    };\n  }\n  // This will get the record based on the id from the database.\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/userDetails/\" + \"user1\")\n      .then((response) => {\n        this.setState({\n          first_name: response.data.first_name,\n          last_name: response.data.last_name,\n          passport_number: response.data.passport_number,\n          email: response.data.email,\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  // These methods will update the state properties.\n  onChangeFirstName(e) {\n    this.setState({\n      first_name: e.target.value,\n    });\n  }\n\n  onChangeLastName(e) {\n    this.setState({\n      last_name: e.target.value,\n    });\n  }\n\n  onChangePassportNumber(e) {\n    this.setState({\n      passport_number: e.target.value,\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  }\n\n  \n\n  // This function will handle the submission.\n  onSubmit(e) {\n    e.preventDefault();\n    const newEditedUser = {\n      first_name: this.state.first_name,\n      last_name: this.state.last_name,\n      passport_number: this.state.passport_number,\n      email: this.state.email,\n    };\n    console.log(newEditedUser);\n\n    // This will send a post request to update the data in the database.\n    axios\n      .post(\n        \"http://localhost:5000/updateUser/\" + \"user1\",\n        newEditedUser\n      )\n      .then((res) => console.log(res.data));\n\n    this.props.history.push(\"/userHome\");\n  }\n\n  // This following section will display the update-form that takes the input from the user to update the data.\n  render() {\n    return (\n      <div>\n        <h3 align=\"center\">Update Details</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>First Name: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.first_name}\n              onChange={this.onChangeFirstName}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Last name: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.last_name}\n              onChange={this.onChangeLastName}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Passport Number: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.passport_number}\n              onChange={this.onChangePassportNumber}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Email: </label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              value={this.state.email}\n              onChange={this.onChangeEmail}\n            />\n          </div>\n          <br />\n\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Update Details\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\n// You can get access to the history object's properties and the closest <Route>'s match via the withRouter\n// higher-order component. This makes it easier for us to edit our records.\n\nexport default withRouter(Edit);\n"]},"metadata":{},"sourceType":"module"}